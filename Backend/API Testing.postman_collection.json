{
	"info": {
		"_postman_id": "99fa90de-ed97-4caf-b013-61f25b93d792",
		"name": "API Testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33385201"
	},
	"item": [
		{
			"name": "Register Customer",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201 for successful signup\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains success message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"User registered successfully\");\r",
							"});\r",
							"\r",
							"pm.test(\"Failure case: Missing fields\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"testUser\",\r\n  \"password\": \"Test1!\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:3000/user/register",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"user",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login Customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 for successful login\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains a token\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.token).to.exist;\r",
							"});\r",
							"\r",
							"pm.environment.set(\"authToken\", pm.response.json().token);\r",
							"\r",
							"pm.test(\"Failure case: Incorrect credentials\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"testUser\",\r\n  \"password\": \"Test1!\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:3000/user/login",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login Employer",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"employerusername\", \r\n  \"password\": \"employerpassword\"  \r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:3000/user/login",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Payment Request",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NzJiYzg1ODZmMDhiNmVkNGViM2NlZjciLCJ1c2VybmFtZSI6InRlc3R1c2VyIiwicm9sZSI6ImN1c3RvbWVyIiwiaWF0IjoxNzMwOTIzMTQ4LCJleHAiOjE3MzA5MjY3NDh9.GwZHOAXAe7npjvDMYvVkFis9zwlp-tQE4EqjNOxhqSQ",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "",
						"value": "",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"amount\": 1000,\r\n  \"currency\": \"USD\",\r\n  \"provider\": \"SWIFT\",\r\n  \"recipientAccount\": \"12345678\",\r\n  \"swiftCode\": \"ABCDEF\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:3000/payment/request",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"payment",
						"request"
					]
				}
			},
			"response": []
		},
		{
			"name": "All payments to verify",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 for successful fetch\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains an array of pending payments\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an(\"array\");\r",
							"});\r",
							"\r",
							"pm.test(\"Failure case: Unauthorized access\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NzJiY2M5NGUzNjM1YzM5OTQyY2MzOWQiLCJ1c2VybmFtZSI6ImVtcGxveWVydXNlcm5hbWUiLCJyb2xlIjoiZW1wbG95ZXIiLCJpYXQiOjE3MzA5MjM4NDYsImV4cCI6MTczMDkyNzQ0Nn0.KBUJ9a__po26KHHDjXS80mLMegoFJkSwJ-RFCVIoXdY",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:3000/employee/payments",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"employee",
						"payments"
					]
				}
			},
			"response": []
		}
	]
}
